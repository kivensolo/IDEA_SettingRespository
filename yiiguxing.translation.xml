<application>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1731995965607" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="AUTO" />
    <option name="translator" value="YOUDAO" />
    <option name="wordbookStoragePath" value="C:\Users\ZekeWang\OneDrive\TranslationPlugin" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
      </youdao-translate>
    </option>
  </component>
  <component name="Translation.States">
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Initialize the message reminder method drop-down box is optional" />
      <item value="初始化消息提醒方式下拉框可选项" />
      <item value="SETTING notification" />
      <item value="语言" />
      <item value="Minutes" />
      <item value="This project illustrates a custom Application-level Settings through the implementation of:" />
      <item value="- `AppSettingsConfigurable` is analogous to a Controller in the MVC model - it interacts with the other two Settings classes and the IntelliJ Platform," />
      <item value="settings" />
      <item value="project view pane" />
      <item value="project wizard" />
      <item value="wizard" />
      <item value="path to the SDK in this case" />
      <item value="Facet Basics represents configuration specific for a particular framework or technology, associated with a module. SDK Facet is available to use in the `Project Settings &gt; Facets` section. It allows us to specify any configuration specified by the `FacetConfiguration` implementation - path to the SDK in this case." />
      <item value="Facets extend base IDE features with additional frameworks support by providing additional libraries, dependencies, technologies, and UI elements for configuring framework-specific settings." />
      <item value="Facet" />
      <item value="Runs an activity on project open." />
      <item value="Application service implementation to keep a running count of how many projects are open at a given time." />
      <item value="Maximum Open Projects Sample implements a `StartupActivity` extension point to run on project open as well as a `ProjectManagerListener` for tracking projects being closed. Both use `ProjectCountingService` application-level [light service][docs:plugin_services:light_services]. It provides methods to increase and decrease the counter of currently opened projects in the IDE. When opening more projects than the maximum allowed (3), a message dialog is shown." />
      <item value="max opened projects" />
      <item value="Defines the type, id, and name of the {@link DemoFacet}. Provides creation of {@link DemoFacet} and associated Configuration. Allows application of this facet to all {@link ModuleType} instances." />
      <item value="facet basics" />
      <item value="code insight" />
      <item value="test completion" />
      <item value="simple code insight test" />
      <item value="This class is a scanner generated by &lt;a href=&quot;https:www.jflex.de&quot;&gt;JFlex&lt;a&gt; 1.7.0 from the specification file &lt;tt&gt;Simple.flex&lt;tt&gt;" />
      <item value="Define strings for the Simple language prefix - used for annotations, line markers, etc." />
      <item value="simple language plugin" />
      <item value="tree structure provider" />
      <item value="conditional operator intention" />
      <item value="comparing string references inspection" />
      <item value="uast utils" />
      <item value="Finds a leaf PSI element at the specified offset from the start of the text range of this node." />
      <item value="Collects line markers for several PsiElements in batch, after all (relatively faster) {@link getLineMarkerInfo(PsiElement)} calls are finished." />
      <item value="Get line markers for this PsiElement." />
      <item value="Allows user to configure visible gutter icons" />
      <item value="element color provider" />
      <item value="Macro" />
      <item value="&quot;Dumb&quot; mode starts and ends in a {@link com.intellij.openapi.application.WriteAction}, so if you're inside a {@link ReadAction} on a background thread, it won't suddenly begin in the middle of your operation. But note that whenever you start a top-level read action on a background thread, you should be prepared to anything being changed, including &quot;dumb&quot; mode being suddenly on and off. To avoid executing a read action in &quot;dumb&quot; mode, please use {@link runReadActionInSmartMode} or {@link com.intellij.openapi.application.NonBlockingReadActioninSmartMode}." />
      <item value="when indexes are updated in the background, and the functionality is very much limited. Only the explicitly allowed functionality is available. Usually, it's allowed by implementing {@link DumbAware} interface." />
      <item value="Implementors must take care of handling andor not calling non-DumbAware parts of system." />
      <item value="A marker interface for the things that are allowed to run in dumb mode (when indices are in background update)." />
      <item value="encode" />
      <item value="repository" />
      <item value="respository" />
      <item value="FileChooserDescriptor IMAGE_FILE_CHOOSER = new FileChooserDescriptor(true, false, false, false, false, false) { @Override public void validateSelectedFiles(VirtualFile @NotNull [] files) throws Exception { super.validateSelectedFiles(files); Use {isFileSelectable()} for (VirtualFile file : files) { if (!MIME_OF_IMAGE.contains(file.getExtension())) { throw new IllegalArgumentException(&quot;Please select a image file, support:&quot; + IMAGE_EXTENSION_LIST_STR); } } } @Override public boolean isFileSelectable(@Nullable VirtualFile file) { if(file == null){ return false; } return MIME_OF_IMAGE.contains(file.getExtension()); } };" />
      <item value="Please select a image file" />
      <item value="validate selected files" />
      <item value="请选择图片文件,支持&quot;jpg&quot;, &quot;jpeg&quot;, &quot;png&quot;, &quot;bmp&quot;, &quot;gif&quot;" />
      <item value="请确保上传的是" />
      <item value="get extension" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="AFRIKAANS" value="5" />
        <entry key="CATALAN" value="1" />
        <entry key="CHINESE" value="676" />
        <entry key="DANISH" value="1" />
        <entry key="ENGLISH" value="634" />
        <entry key="FINNISH" value="2" />
        <entry key="FRENCH" value="3" />
        <entry key="HINDI" value="1" />
        <entry key="ICELANDIC" value="2" />
        <entry key="INDONESIAN" value="6" />
        <entry key="ITALIAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="POLISH" value="2" />
        <entry key="SUNDANESE" value="2" />
        <entry key="SWEDISH" value="5" />
        <entry key="TURKISH" value="1" />
        <entry key="UZBEK" value="6" />
        <entry key="WELSH" value="1" />
      </map>
    </option>
  </component>
  <component name="Translation.YoudaoSettings">
    <option name="DOMAIN" value="COMPUTERS" />
  </component>
</application>
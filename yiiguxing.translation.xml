<application>
  <component name="AppStorage">
    <histories>
      <item value="exclusive access" />
      <item value="exclusive" />
      <item value="Commonly, a lock provides exclusive access to a * shared resource:" />
      <item value="A lock is a tool for controlling access to a shared resource by * multiple threads" />
      <item value="may have * quite different properties, and may support multiple associated * {@link Condition} objects." />
      <item value="structuring" />
      <item value="statements" />
      <item value="implementations provide more extensive locking * operations than can be obtained using {@code synchronized} methods * and statements. They allow more flexible structuring, may have * quite different properties, and may support multiple associated * {@link Condition} objects." />
      <item value="Synchronizer providing all implementation mechanics" />
      <item value="Retain" />
      <item value="Ticket" />
      <item value="deregister" />
      <item value="Sets the the vertical alignment." />
      <item value="set Alignment X" />
      <item value="Not used by this class." />
      <item value="fernflower" />
      <item value="Spinner" />
      <item value="font Spinner" />
      <item value="Split Pane" />
      <item value="notches" />
      <item value="LOWERED" />
      <item value="Whether or not the size has been requested yet." />
      <item value="horizontal Spring" />
      <item value="is not attached to a horizontal group" />
      <item value="* Causes subcomponents of this &lt;code&gt;JInternalFrame&lt;/code&gt; * to be laid out at their preferred size. Internal frames that are * iconized or maximized are first restored and then packed. If the * internal frame is unable to be restored its state is not changed * and will not be packed." />
      <item value="set Resize Weight" />
      <item value="set Preferred Size" />
      <item value="procyon" />
      <item value="Misc Utils" />
      <item value="obfuscator Group" />
      <item value="BCV is awesome, blocking System.exit(" />
      <item value="Checks the hotkeys" />
      <item value="This method is called when files have been successfully dropped" />
      <item value="disabled Are Navigable" />
      <item value="set Look And Feel" />
      <item value="tab Component" />
      <item value="Konloch" />
      <item value="Water Wolf" />
      <item value="WARRANTY" />
      <item value=": * Finish dragging code * Finish right-click tab menu detection * make it use that global last used inside of export as jar * Add https://github.com/ptnkjke/Java-Bytecode-Editor visualize as a plugin * make zipfile not include the decode shit * add stackmapframes to bytecode decompiler * make ez-injection plugin console show all sys.out calls * add JEB decompiler optionally, requires them to add jeb library jar externally and disable update check ? * add decompile as zip for krakatau-bytecode, jd-gui and smali for CLI * add decompile all as zip for CLI * fix hook inject for EZ-Injection * fix classfile searcher * make the decompilers launch in a separate process" />
      <item value="Creates an instance of &lt;code&gt;Dimension&lt;/code&gt; with a width * of zero and a height of zero." />
      <item value="The preferred horizontal alignment of the component." />
      <item value="the number of columns to use to calculate * the preferred width; if columns is set to zero, the * preferred width will be whatever naturally results from * the component implementation" />
      <item value="set Horizontal Alignment" />
      <item value="Glue" />
      <item value="Bevel" />
      <item value="Lowered" />
      <item value="Raised" />
      <item value="Raised bevel type" />
      <item value="Lowered bevel type." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="190" />
        <entry key="ENGLISH" value="410" />
        <entry key="TURKISH" value="1" />
        <entry key="HINDI" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="autoPlayTTS" value="true" />
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="targetLanguageSelection" value="PRIMARY_LANGUAGE" />
    <option name="translator" value="ai.youdao" />
    <option name="ttsSource" value="TRANSLATION" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>
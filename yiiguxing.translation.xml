<application>
  <component name="AppStorage">
    <histories>
      <item value="tab Component" />
      <item value="Konloch" />
      <item value="Water Wolf" />
      <item value="WARRANTY" />
      <item value=": * Finish dragging code * Finish right-click tab menu detection * make it use that global last used inside of export as jar * Add https://github.com/ptnkjke/Java-Bytecode-Editor visualize as a plugin * make zipfile not include the decode shit * add stackmapframes to bytecode decompiler * make ez-injection plugin console show all sys.out calls * add JEB decompiler optionally, requires them to add jeb library jar externally and disable update check ? * add decompile as zip for krakatau-bytecode, jd-gui and smali for CLI * add decompile all as zip for CLI * fix hook inject for EZ-Injection * fix classfile searcher * make the decompilers launch in a separate process" />
      <item value="Creates an instance of &lt;code&gt;Dimension&lt;/code&gt; with a width * of zero and a height of zero." />
      <item value="The preferred horizontal alignment of the component." />
      <item value="the number of columns to use to calculate * the preferred width; if columns is set to zero, the * preferred width will be whatever naturally results from * the component implementation" />
      <item value="set Horizontal Alignment" />
      <item value="Glue" />
      <item value="Bevel" />
      <item value="Lowered" />
      <item value="Raised" />
      <item value="Raised bevel type" />
      <item value="Lowered bevel type." />
      <item value="The plain style constant." />
      <item value="Panel" />
      <item value="Invariants" />
      <item value="This method is often used in conjunction with the {@link * java.nio.ByteBuffer#compact compact} method when transferring data from * one place to another." />
      <item value="The offset of the subarray to be used;" />
      <item value="The offset of the subarray to be used; must be non-negative and * no larger than &lt;tt&gt;array.length&lt;/tt&gt;. The new buffer's position * will be set to this value." />
      <item value="Wraps a byte array into a buffer." />
      <item value="Sets the values for the calendar fields &lt;code&gt;YEAR&lt;/code&gt;, * &lt;code&gt;MONTH&lt;/code&gt;, and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;. * Previous values of other calendar fields are retained. If this is not desired, * call {@link #clear()} first." />
      <item value="the value used to set the &lt;code&gt;YEAR&lt;/code&gt; calendar field." />
      <item value="the value used to set the &lt;code&gt;MONTH&lt;/code&gt; calendar field" />
      <item value="the value used to set the &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; calendar field." />
      <item value="the year minus 1900" />
      <item value="Leap" />
      <item value="the amount of date or time to be added to the field." />
      <item value="subtract" />
      <item value="Updates the CRC-32 checksum with the specified byte (the low * eight bits of the argument b)." />
      <item value="checksum" />
      <item value="class that can be used to compute the CRC-32 of a data stream. * * &lt;p&gt; Passing a {@code null} argument to a method in this class will cause * a {@link NullPointerException} to be thrown." />
      <item value="intern" />
      <item value="Returns a canonical representation for the string object. * &lt;p&gt; * A pool of strings, initially empty, is maintained privately by the * class {@code String}. * &lt;p&gt; * When the intern method is invoked, if the pool already contains a * string equal to this {@code String} object as determined by * the {@link #equals(Object)} method, then the string from the pool is * returned. Otherwise, this {@code String} object is added to the * pool and a reference to this {@code String} object is returned. * &lt;p&gt; * It follows that for any two strings {@code s} and {@code t}, * {@code s.intern() == t.intern()} is {@code true} * if and only if {@code s.equals(t)} is {@code true}. * &lt;p&gt; * All literal strings and string-valued constant expressions are * interned. String literals are defined in section 3.10.5 of the * &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;. * * @return a string that has the same contents as this string, but is * guaranteed to be from a pool of unique strings." />
      <item value="Returns" />
      <item value="representation" />
      <item value="Enlarg" />
      <item value="predicates" />
      <item value="Returns a list containing the results of applying the given [transform] function * to each element in the original collection." />
      <item value="eager vs lazy evaluation" />
      <item value="Extensions on collections are inlined" />
      <item value="Reified generics" />
      <item value="compiler substitutes a body of the function instead of calling it" />
      <item value="predicate" />
      <item value="satisfies" />
      <item value="Returns `this` value if it satisfies the given [predicate] or `null`, if it doesn't." />
      <item value="returns the receiver object if it satisfies the given predicate, otherwise returns null" />
      <item value="nested" />
      <item value="嵌套类" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="154" />
        <entry key="ENGLISH" value="374" />
        <entry key="TURKISH" value="1" />
        <entry key="HINDI" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="autoPlayTTS" value="true" />
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="targetLanguageSelection" value="PRIMARY_LANGUAGE" />
    <option name="translator" value="ai.youdao" />
    <option name="ttsSource" value="TRANSLATION" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>
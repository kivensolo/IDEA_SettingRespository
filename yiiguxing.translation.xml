<application>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1734313462863" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="AUTO" />
    <option name="translator" value="YOUDAO" />
    <option name="wordbookStoragePath" value="C:\Users\ZekeWang\OneDrive\TranslationPlugin" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
      </youdao-translate>
    </option>
  </component>
  <component name="Translation.States">
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="slash" />
      <item value="already followed by slash" />
      <item value="caret" />
      <item value="need insert slash" />
      <item value="Creates a default camel-hump prefix matcher based on given prefix" />
      <item value="BASIC" />
      <item value="SMART" />
      <item value="with insert handler" />
      <item value="An item shown in a {@link Lookup} suggestion list, most often produced by code completion or live templates. A typical way to create lookup element is to use {@link LookupElementBuilder}. Another way is to subclass it. Use the latter way only if you need it to implement some additional interface, to modify equalshashCode or other advanced logic." />
      <item value="Lookup" />
      <item value="See {@link withType(CompletionType)}, {@link withInvocationCount(int)} and {@link withPosition(PsiElement, int)} to create modified copy of given current parameters." />
      <item value="completion parameters" />
      <item value="type" />
      <item value="place" />
      <item value="Commenter" />
      <item value="Finds file by path relative to this file." />
      <item value="Returns the part of the underlying element which serves as a reference, or the complete text range of the element if the entire element is a reference. &lt;p&gt; Sample: PsiElement representing a fully qualified name with multiple dedicated PsiReferences, each bound to the range it resolves to (skipping the '.' separator). &lt;pre&gt; PsiElement text: qualified.LongName PsiReferences: [Ref1---]X[Ref2--] &lt;pre&gt; where {@code Ref1} would resolve to a &quot;namespace&quot; and {@code Ref2} to an &quot;element&quot;. @return Relative range in element" />
      <item value="尾" />
      <item value="segment" />
      <item value="段" />
      <item value="片" />
      <item value="Register reference provider with default priority" />
      <item value="reference place description." />
      <item value="Register reference provider with custom priority." />
      <item value="trinity" />
      <item value="Returns the first element matching the given [predicate], or `null` if no such element was found." />
      <item value="@param file - might (and will be) null. Return true in this case if you'd like to switch this kind of highlighting in ANY file" />
      <item value="annotator" />
      <item value="manipulator" />
      <item value="qualified name provider" />
      <item value="Qualified" />
      <item value="Literal" />
      <item value="leaf psi element" />
      <item value="Attempts to collect any comment elements above the Simple keyvalue pair." />
      <item value="simple property" />
      <item value="Variants" />
      <item value="{@link PsiElement} andor {@link com.intellij.codeInsight.lookup.LookupElement} instances representing all identifiers that are visible at the location of the reference" />
      <item value="the array of available identifiers" />
      <item value="visible identifiers" />
      <item value="(The list of visible identifiers may not be filtered by the completion prefix string - the filtering is performed later by the IDE.)" />
      <item value="the returned array are used to build the lookup list for basic code completion" />
      <item value="The contents of the returned array are used to build the lookup list for basic code completion." />
      <item value="Returns the array of String, {@link PsiElement} andor {@link com.intellij.codeInsight.lookup.LookupElement} instances representing all identifiers that are visible at the location of the reference. The contents of the returned array are used to build the lookup list for basic code completion. (The list of visible identifiers may not be filtered by the completion prefix string - the filtering is performed later by the IDE.) &lt;p&gt; This method is default since 2018.3." />
      <item value="Inherit this interface if you want the reference to resolve to more than one element, or if you want to provide resolve result(s) for a superset of valid resolve cases." />
      <item value="Inherit this interface if you want the reference to resolve to more than one element, or if you want to provide resolve result(s) for a superset of valid resolve cases. For example, in Java, references in a static context are resolved to non-static methods in case there is no valid candidate. isValidResult() in this case should return false for later analysis by highlighting pass." />
      <item value="if true, the code in the context of which the reference is being resolved is considered incomplete, and the method may return additional invalid results." />
      <item value="Returns the results of resolving the reference." />
      <item value="Scheme" />
      <item value="patterns" />
      <item value="Factory for {@link String}, {@link Character} and {@link Object}-based patterns. Provides methods for composing patterns with e.g. logical operations." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="AFRIKAANS" value="5" />
        <entry key="CATALAN" value="1" />
        <entry key="CHINESE" value="811" />
        <entry key="DANISH" value="1" />
        <entry key="ENGLISH" value="768" />
        <entry key="FINNISH" value="2" />
        <entry key="FRENCH" value="3" />
        <entry key="HINDI" value="1" />
        <entry key="ICELANDIC" value="2" />
        <entry key="INDONESIAN" value="6" />
        <entry key="ITALIAN" value="1" />
        <entry key="LATIN" value="3" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="POLISH" value="2" />
        <entry key="SUNDANESE" value="2" />
        <entry key="SWEDISH" value="5" />
        <entry key="TURKISH" value="1" />
        <entry key="UZBEK" value="6" />
        <entry key="WELSH" value="1" />
      </map>
    </option>
  </component>
  <component name="Translation.YoudaoSettings">
    <option name="DOMAIN" value="COMPUTERS" />
  </component>
</application>
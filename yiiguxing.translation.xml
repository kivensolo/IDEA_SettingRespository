<application>
  <component name="AppStorage">
    <histories>
      <item value="some Property" />
      <item value="Destructuring" />
      <item value="Destructuring In Lambdas" />
      <item value="short Syntax" />
      <item value="basic Syntax" />
      <item value="Letter" />
      <item value="is Letter" />
      <item value="This `contains` operation mixing integer and floating point arguments has ambiguous semantics and is going to be removed" />
      <item value="celsius Degrees" />
      <item value="Basic Interop" />
      <item value="life, the universe, and everything" />
      <item value="val is read-only reference, not object" />
      <item value="quizzes" />
      <item value="Return the set of products that were ordered by every customer" />
      <item value="partition" />
      <item value="predicate" />
      <item value="predicates" />
      <item value="INCONSISTENT" />
      <item value="INSTALL PARSE FAILED INCONSISTENT CERTIFICATES" />
      <item value="where {@code currentLoader} denotes the defining class loader of * the current class. *" />
      <item value="Returns the {@code Class} object associated with the class or * interface with the given string name. Invoking this method is * equivalent to:" />
      <item value="Pluggable strategy for asynchronously executing requests" />
      <item value="The runnable that will be used for the main listening thread." />
      <item value="This class implements server sockets. A server socket waits for * requests to come in over the network. It performs some operation * based on that request, and then possibly returns a result to the requester. * &lt;p&gt; * The actual work of the server socket is performed by an instance * of the {@code SocketImpl} class. An application can * change the socket factory that creates the socket * implementation to configure itself to create sockets * appropriate to the local firewall." />
      <item value="favicon" />
      <item value="Hit Enter to stop" />
      <item value="blockquote" />
      <item value="EVENT CP PAYMENT GO BACK" />
      <item value="neutral click" />
      <item value="Mostly this is here for debugging purposes." />
      <item value="BALANCE" />
      <item value="health" />
      <item value="classify" />
      <item value="jump" />
      <item value="jummp" />
      <item value="RECOVER PLAYER LIMIT" />
      <item value="focus" />
      <item value="focuse" />
      <item value="channel" />
      <item value="Channle" />
      <item value="Channel" />
      <item value="declare thread-local variable" />
      <item value="Decompiler" />
      <item value="A key of this coroutine context element." />
      <item value="avoid lambda creation" />
      <item value="fast path" />
      <item value="sync" />
      <item value="async" />
      <item value="wait for completion of the request, including all its children" />
      <item value="I'm done and I don't explicitly join my children that are still active" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="60" />
        <entry key="ENGLISH" value="181" />
        <entry key="HINDI" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="autoPlayTTS" value="true" />
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="ttsSource" value="TRANSLATION" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="ENGLISH" />
      </youdao-translate>
    </option>
  </component>
</application>